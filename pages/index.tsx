import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState, useEffect, FC } from "react";
import { Appointment } from "./types";
import { Scheduler, ScheduleSpecificDate } from "@ssense/sscheduler";

// exemplary response
// [
//   {
//     "name": "Lunch with Mort",
// 	"startTime": "2021-03-03T12:00:00+0000",
//     "endTime": "2021-03-03T13:00:00+0000"
//   },
//   {
//     "name": "Morning Meeting",
// 	"startTime": "2021-03-03T09:00:00+0000",
//     "endTime": "2021-03-03T09:30:00+0000"
//   },
//   {
//     "name": "Exit Interviews",
// 	"startTime": "2021-03-03T14:00:00+0000",
//     "endTime": "2021-03-03T17:30:00+0000"
//   },
//   {
// 	"name": "Exit Interview - Jack Sparrow",
// 	"startTime": "2021-03-03T15:30:00+0000",
//     "endTime": "2021-03-03T15:45:00+0000"
//   }
// ]

const scheduler = new Scheduler();

const AvailableTimeSlots: FC<{ url: string; date: string }> = ({ url, date }) => {
  const [existingAppointments, setExistingAppointments] = useState<ScheduleSpecificDate[] | null>(
    null
  );

  const parsedDate = new Date(date);
  const nextDay = new Date(parsedDate.setDate(parsedDate.getDate() + 1)).toISOString();

  useEffect(() => {
    fetch(url)
      .then(appointments => appointments.json())
      .then(({ appointments }) =>
        setExistingAppointments(
          appointments.map(({ startTime, endTime }: Appointment) => ({
            from: startTime,
            to: endTime,
          }))
        )
      )
      .catch(err => console.log(err));
  }, [url]);

  const availabilitySlots =
    existingAppointments &&
    scheduler.getAvailability({
      from: date,
      to: nextDay,
      duration: 60,
      interval: 30,
      schedule: {
        weekdays: {
          from: "09:00",
          to: "17:00",
        },
        unavailability: existingAppointments,
      },
    });

  return (
    <div>
      <Head>
        <title>Become a time-master</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Available slots </h1>
        {availabilitySlots &&
          availabilitySlots[date].map(slot => (
            <button key={slot.time} disabled={!slot.available}>
              {slot.time}
            </button>
          ))}
      </main>
    </div>
  );
};

const Home: NextPage = () => {
  return <AvailableTimeSlots url="/api/appointments" date="2021-03-03" />;
};

export default Home;
